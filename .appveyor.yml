image: Visual Studio 2015

environment:

  # PyPI login
  username: dwtools
  password:
    secure: 9/YAQhmz9Kb1ZeXzhBYeQA==

  # https://www.appveyor.com/docs/build-environment/#python
  matrix:
    - PYTHON: "C:\\Python27"
      CL: "/Itabu\\src\\extern"
    - PYTHON: "C:\\Python27-x64"
      CL: "/Itabu\\src\\extern"
      #DISTUTILS_USE_SDK: "1"
    - PYTHON: "C:\\Python34"
    - PYTHON: "C:\\Python34-x64"
      DISTUTILS_USE_SDK: "1"
    - PYTHON: "C:\\Python35"
    - PYTHON: "C:\\Python35-x64"
    - PYTHON: "C:\\Python36"
    - PYTHON: "C:\\Python36-x64"
    - PYTHON: "C:\\Python37"
    - PYTHON: "C:\\Python37-x64"

install:
  - "%PYTHON%\\python.exe --version"
  - "%PYTHON%\\python.exe -m pip install -r requirements.txt"
  - choco install -y --no-progress -r swig --version 3.0.12

# support python27-x64 and python34-x64
# (https://packaging.python.org/guides/supporting-windows-using-appveyor)
before_build:
  - IF "%DISTUTILS_USE_SDK%"=="1" CALL "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 /release

build_script:
  - "%PYTHON%\\python.exe setup.py build_ext --inplace"

test_script:
  - "%PYTHON%\\python.exe -m unittest discover"

deploy_script:
  - "%PYTHON%\\python.exe -m pip install twine"
  - "%PYTHON%\\python.exe -m pip install wheel"  
  - "%PYTHON%\\python.exe setup.py bdist_wheel"
  - "echo [pypi] > %USERPROFILE%\\.pypirc"
  - "echo username: %username% >> %USERPROFILE%\\.pypirc"
  - "echo password: %password% >> %USERPROFILE%\\.pypirc"
  - cmd: "if [%APPVEYOR_REPO_TAG%]==[true] if NOT [%CPPDEBUG%]==[1] %PYTHON%\\Scripts\\twine upload --skip-existing dist\\*.whl"
