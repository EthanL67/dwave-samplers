version: 2
jobs:
  #
  # linux
  #

  test-3.8: &test-linux-template
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ checksum "docs/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
      - run: python -m virtualenv env
      - run: env/bin/pip install -r tests/requirements.txt -r docs/requirements.txt
      - save_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ checksum "docs/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - env
      - run: env/bin/python setup.py build_ext --inplace
      - run:
          name: pytest
          command: env/bin/coverage run -m unittest discover
      - run:
          name: cpptest
          command: |
            . env/bin/activate
            make -C tests/ smoke

  test-3.7:
    <<: *test-linux-template
    docker:
      - image: circleci/python:3.7

  test-3.6:
    <<: *test-linux-template
    docker:
      - image: circleci/python:3.6

  test-3.5:
    <<: *test-linux-template
    docker:
      - image: circleci/python:3.5

  #
  # macos
  #
  test-osx-3.8: &test-osx-template
    macos:
      xcode: "11.2.1"

    environment:
      PYTHON: 3.8.0

      # Force (lie about) macOS 10.9 binary compatibility.
      # Needed for properly versioned wheels.
      # See: https://github.com/MacPython/wiki/wiki/Spinning-wheels
      MACOSX_DEPLOYMENT_TARGET: 10.9

    steps:
      - checkout
      - run: HOMEBREW_NO_AUTO_UPDATE=1 brew install pyenv
      - restore_cache:
          keys:
            - v2-pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-11.2.1
      - run: pyenv install $PYTHON -s
      - save_cache:
          key: v2-pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-11.2.1
          paths:
            - ~/.pyenv
      - run:
          name: create virtualenv
          command: |
            eval "$(pyenv init -)"
            pyenv local $PYTHON
            python -m pip install virtualenv
            python -m virtualenv env
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
      - run: env/bin/pip install -r tests/requirements.txt
      - save_cache:
          key: v2-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - env
      - run: env/bin/python setup.py build_ext --inplace
      - run: env/bin/coverage run -m unittest discover

  test-osx-3.7:
    <<: *test-osx-template
    environment:
      PYTHON: 3.7.4
      MACOSX_DEPLOYMENT_TARGET: 10.9

  test-osx-3.6:
    <<: *test-osx-template
    environment:
      PYTHON: 3.6.5
      MACOSX_DEPLOYMENT_TARGET: 10.9

  test-osx-3.5:
    <<: *test-osx-template
    environment:
      PYTHON: 3.5.5
      MACOSX_DEPLOYMENT_TARGET: 10.9

  #
  # deploy
  #

  build-manylinux-64: &manylinux-template
    docker:
      - image: quay.io/pypa/manylinux1_x86_64

    steps:
      - checkout

      - run:
          name: build wheels
          command: |
            for PYBIN in /opt/python/*/bin; do
              "${PYBIN}/python" -c "import sys; sys.exit(sys.version_info<(3,5))" || continue
              "${PYBIN}/pip" install -r requirements.txt
              "${PYBIN}/pip" wheel . -w ./wheelhouse
              "${PYBIN}/python" setup.py sdist -d ./dist
            done

      - run:
          name: bundle shared libraries into wheels
          command: |
            for whl in ./wheelhouse/dwave*greedy*.whl; do
              auditwheel repair "$whl" -w ./dist
            done

      - store_artifacts:
          path: dist

      - run:
          name: create a virtualenv
          command: |
            pythons=(/opt/python/*/bin)
            python="${pythons[0]}"
            "$python/pip" install virtualenv
            "$python/python" -m virtualenv env

      - run: &upload-template
          name: install twine and deploy
          command: |
            env/bin/pip install twine
            env/bin/twine upload -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" --skip-existing ./dist/*

  build-manylinux-32:
    <<: *manylinux-template
    docker:
      - image: quay.io/pypa/manylinux1_i686

  build-osx-3.8: &osx-build-template
    macos:
      xcode: "11.2.1"

    environment:
      PYTHON: 3.8.0
      MACOSX_DEPLOYMENT_TARGET: 10.9

    steps: 
      - checkout
      - run: HOMEBREW_NO_AUTO_UPDATE=1 brew install pyenv
      - restore_cache:
          keys:
            - v2-pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-11.2.1
      - run: pyenv install $PYTHON -s
      - save_cache:
          key: v2-pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-11.2.1
          paths:
            - ~/.pyenv
      - run:
          name: create virtualenv
          command: |
            eval "$(pyenv init -)"
            pyenv local $PYTHON
            python -m pip install virtualenv
            python -m virtualenv env
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
      - run: env/bin/pip install -r tests/requirements.txt
      - save_cache:
          key: v2-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - env
      - run: env/bin/python setup.py build_ext --inplace
      - run: env/bin/python setup.py bdist_wheel
      - store_artifacts:
          path: ./dist
      - run: *upload-template

  build-osx-3.7:
    <<: *osx-build-template
    environment:
      PYTHON: 3.7.4
      MACOSX_DEPLOYMENT_TARGET: 10.9

  build-osx-3.6:
    <<: *osx-build-template
    environment:
      PYTHON: 3.6.5
      MACOSX_DEPLOYMENT_TARGET: 10.9

  build-osx-3.5:
    <<: *osx-build-template
    environment:
      PYTHON: 3.5.5
      MACOSX_DEPLOYMENT_TARGET: 10.9


workflows:
  version: 2
  test:
    jobs:
      - test-3.8
      - test-3.7
      - test-3.6
      - test-3.5
      - test-osx-3.8
      - test-osx-3.7
      - test-osx-3.6
      - test-osx-3.5

  deploy:
    jobs:
      - build-manylinux-64:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - build-manylinux-32:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - build-osx-3.8:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - build-osx-3.7:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - build-osx-3.6:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - build-osx-3.5:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
