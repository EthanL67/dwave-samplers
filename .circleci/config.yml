version: 2.1

orbs:
  ocean: dwave/ocean@dev:62d6492

environment:
  PIP_PROGRESS_BAR: off

jobs:
  test-install:
    docker:
      - image: circleci/python:3.7    # last version pip==8.1.0 works on

    steps:
      - checkout

      - attach_workspace: &attach-dist
          at: dist

      - run:
          # pip 10.0 is the first to support pyproject.toml build config
          name: Install from sdist with pip==10.0
          command: |
            python -m venv env-sdist-pip10
            . env-sdist-pip10/bin/activate
            pip install 'pip==10.0'
            pip install ./dist/dwave-greedy*.tar.gz

      - run:
          name: Install from sdist with latest pip
          command: |
            python -m venv env-sdist
            . env-sdist/bin/activate
            pip install -U pip
            pip install ./dist/dwave-greedy*.tar.gz

      - run:
          # pip 8.1.0 is the first version that supports manylinux1
          name: Install from wheel with pip==8.1.0
          command: |
            python -m venv env-wheel-pip8
            . env-wheel-pip8/bin/activate
            pip install 'pip==8.1.0'
            # TODO: can we search for package locally, but install deps from pypi?
            pip install -r requirements.txt
            pip install --no-index --find-links=dist --only-binary=dwave-greedy dwave-greedy

      - run:
          name: Install from wheel with latest pip
          command: |
            python -m venv env-wheel
            . env-wheel/bin/activate
            pip install -U pip
            pip install -r requirements.txt
            pip install --no-index --find-links=dist --only-binary=dwave-greedy dwave-greedy

  test-docs:
    docker:
      - image: circleci/python:3.7    # RtD uses py37

    steps:
      - checkout

      - attach_workspace: *attach-dist

      - ocean/pip-install:
          requirements: requirements.txt tests/requirements.txt docs/requirements.txt

      - ocean/pip-install:
          args: --no-index --find-links=dist dwave-greedy

      - run:
          name: Build docs
          command: |
            . env/bin/activate
            make -C docs/ html

      - store_artifacts:
          path: ./docs/build/html

      - run:
          name: Test docs
          command: |
            . env/bin/activate
            make -C docs/ doctest

      - run:
          name: Test links
          command: |
            . env/bin/activate
            make -C docs/ linkcheck

  pypi-deploy:
    docker:
      - image: circleci/python:3.9

    steps:
      - attach_workspace: *attach-dist

      - run:
          name: Deploy sdist and wheels to PyPI
          command: |
            python -m venv env
            . env/bin/activate
            pip install twine
            twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD --skip-existing ./dist/*


workflows:
  build-test-deploy:
    jobs:
      - ocean/build-sdist:
          filters: &always-run  # required because it's indirectly required by the deploy job that runs on tags only
            tags:
              only: /.*/

      - ocean/build-manylinux:
          name: build-<< matrix.manylinux-tag >>_<< matrix.manylinux-arch >>-py<< matrix.python-version >>
          matrix:
            parameters:
              manylinux-tag: ["manylinux1", "manylinux2014"]
              manylinux-arch: ["x86_64"]
              python-version: &python-versions ["3.6.8", "3.7.9", "3.8.9", "3.9.4"]
          filters:
            <<: *always-run

      - ocean/test-linux-from-dist:
          name: test-linux-py<< matrix.python-version >>
          requires:
            - ocean/build-sdist
            - ocean/build-manylinux
          matrix:
            parameters:
              python-version: *python-versions
              package: ["dwave-greedy"]
          filters:
            <<: *always-run

      - test-install:
          requires:
            - ocean/build-sdist
            - ocean/build-manylinux
          filters:
            <<: *always-run

      - test-docs:
          requires:
            - ocean/build-sdist
            - ocean/build-manylinux
          filters:
            <<: *always-run

      - ocean/build-macos-wheel:
          name: build-macos-py<< matrix.python-version >>
          matrix:
            parameters:
              python-version: *python-versions
          filters:
            <<: *always-run

      - ocean/test-macos-from-dist:
          name: test-macos-py<< matrix.python-version >>
          requires:
            - ocean/build-sdist
            - ocean/build-macos-wheel
          matrix:
            parameters:
              python-version: *python-versions
              package: ["dwave-greedy"]
          filters:
            <<: *always-run

      - ocean/build-windows-wheel:
          name: build-win-<< matrix.python-arch >>-py<< matrix.python-version >>
          matrix:
            parameters:
              python-version: *python-versions
              python-arch: &python-archs-win ["", "x86"]
          filters:
            <<: *always-run

      - ocean/test-windows-from-dist:
          name: test-win-<< matrix.python-arch >>-py<< matrix.python-version >>
          requires:
            - ocean/build-windows-wheel
          matrix:
            parameters:
              python-version: *python-versions
              python-arch: *python-archs-win
              package: ["dwave-greedy"]
          filters:
            <<: *always-run

      - pypi-deploy:
          requires:
            - ocean/test-linux-from-dist
            - ocean/test-macos-from-dist
            - ocean/test-windows-from-dist
            - test-docs
            - test-install
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*((\.dev|rc)([0-9]+)?)?$/
            branches:
              ignore: /.*/
